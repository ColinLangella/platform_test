## Set up a two node cluster
t/020_nodectl_install_pgedge.pl
t/300_setup_script.pl

## Test Service Module

t/service_reload_component.pl
t/service_restart_component.pl
t/service_start_component.pl
t/service_stop_component.pl
t/service_status_without_flag.pl
t/service_enable_component.pl
t/service_disable_component.pl
t/service_enable_error.pl

## Test UM Module
t/um_install_available_components.py
t/um_update_available_components.py
t/um_remove_available_components.py


## Setup scripts for lower level directory
t/8000a_env_setup_pgedge_node1.pl
t/8001a_env_setup_pgedge_node2.pl
t/8000b_install_pgedge_node1.pl
t/8001b_install_pgedge_node2.pl
t/8051_env_create_node1.pl
t/8052_env_create_node2.pl

## Test DB Module
t/db-guc-show.py
t/db-guc-show-no-guc.py
t/db-guc-show-wildcard.py
t/db-guc-show-invalid-name.py
t/db-guc-set.py
t/db-guc-set-invalid-type.py
t/db-guc-set-no-reload.py
t/db-guc-set-invalid-value.py


## Test sub_tests
# error tests
t/spock_node_create_no_node_name.py
t/spock_node_create_no_repset_user.py
t/spock_node_create_no_dbname.py
t/spock_node_create_no_dns.py

##
# sub --synchronize_structure tests
##
t/spock_sub_create_synch_struct_n1.py
t/spock_sub_create_synch_struct_n2.py

# cleanup scripts
t/spock_sub_create_synch_cleanup.py
t/8083_env_sub_drop_n2.pl
t/8086_env_node_drop_n1.pl
t/8087_env_node_drop_n2.pl

##
# sub --synchronize_data tests
##
t/spock_sub_create_synch_data_n1.py
t/spock_sub_create_synch_data_n2.py

# cleanup scripts
t/spock_sub_create_synch_cleanup.py
t/8083_env_sub_drop_n2.pl
t/8086_env_node_drop_n1.pl
t/8087_env_node_drop_n2.pl

##
# sub --synchronize_structure and --synchronize_data tests
##
t/spock_sub_create_synch_all_n1.py
t/spock_sub_create_synch_all_n2.py

# cleanup scripts
t/spock_sub_create_synch_cleanup.py
t/8083_env_sub_drop_n2.pl
t/8086_env_node_drop_n1.pl
t/8087_env_node_drop_n2.pl


# Right now, this next time invoking 8000b and 8001b fail because the ports are still tied up.  Do we need them?

##
t/020_nodectl_install_pgedge.pl
t/8000a_env_setup_pgedge_node1.pl
t/8001a_env_setup_pgedge_node2.pl
#t/8000b_install_pgedge_node1.pl
#t/8001b_install_pgedge_node2.pl
t/8051_env_create_node1.pl
t/8052_env_create_node2.pl

## pgbench
t/pgbench-install.py
t/pgbench-remove_leaves_my_table.py
t/pgbench-install_with_repset.py
t/pgbench-run.py
t/pgbench-validate.py
t/pgbench-install_skip.py
t/pgbench-remove.py

##
#Negative-Tests
#
t/pgbench-install_no_dbname.py
t/pgbench-install_invalid_dbname.py
t/pgbench-install_invalid_dbname_valid_repsetname.py
t/pgbench-validate_without_pgbench-install.py
t/pgbench-run_dependency_on_pgbench-install.py
t/pgbench-install_valid_dbname_invalid_repsetname.py
t/pgbench-run_invalid_dbname.py
t/pgbench-run_invalid_rate.py
t/pgbench-validate_no_dbname.py
t/pgbench-validate_invalid_dbname.py
t/pgbench-remove_no_dbname.py

##Teardown Scripts
#t/8998_env_remove_pgedge_node1.pl
#t/8999_env_remove_pgedge_node2.pl

# We don't need to repeat the 8000b/8001b tests here.

t/020_nodectl_install_pgedge.pl
t/8000a_env_setup_pgedge_node1.pl
t/8001a_env_setup_pgedge_node2.pl
#t/8000b_install_pgedge_node1.pl
#t/8001b_install_pgedge_node2.pl


## Test Spock Module
t/spock_1_setup.py
t/spock_2_node_create.py
t/spock_3_sub_create.py
t/spock_4_repset_add_table.py
t/spock_5_cofirm_replication.py

## Test Ace Module
t/cluster_1_gen_json.py
t/ace_1_setup.py
t/ace_2_diff_table.py
t/ace_3_diff_table_args.py
t/ace_4_diff_additional.py
t/ace_99_cleanup.py

## Test Drop and Negative Spock Module
t/spock_6_drop.py
t/spock_7_negative_list.py
t/spock_8_negative_create.py



## UM Remove components, Clean environment and free ports
t/8998_env_remove_pgedge_node1.pl
t/8999_env_remove_pgedge_node2.pl

t/9998_remove_pgedge.py
